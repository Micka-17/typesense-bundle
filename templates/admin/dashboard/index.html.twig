{% extends 'base.html.twig' %}

{% block title %}Typesense Collections{% endblock %}

{% block body %}
<div class="container my-4">
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Collections</h3>
            <div>
                <input type="text" id="collectionSearch" class="form-control form-control-sm" placeholder="Search collections..." style="min-width: 200px;">
            </div>
            <div>
                <select id="sortCollections" class="form-select form-select-sm">
                    <option value="name" selected>Sort by Name (A-Z)</option>
                    <option value="documents">Sort by Documents (Desc)</option>
                    <option value="created_at">Sort by Creation Date (Desc)</option>
                </select>
                <small class="text-muted ms-2" id="currentSort">Name</small>
            </div>
        </div>
        <div class="card-body">
            {# Section pour les entités sans collection #}
            {% if missingCollections|length > 0 %}
                <div class="alert alert-warning mb-4">
                    <h4 class="alert-heading">Entités sans collection Typesense</h4>
                    <p>Les entités suivantes sont configurées pour être indexées mais n'ont pas encore de collection Typesense :</p>
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Collection Name</th>
                                    <th>Entity Class</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for missing in missingCollections %}
                                    <tr>
                                        <td><strong>{{ missing.collectionName }}</strong></td>
                                        <td>{{ missing.entityClass }}</td>
                                        <td>
                                            <form action="{{ path('micka17_typesense_admin_recreate_collection', {entityClass: missing.entityClass}) }}" method="post" class="d-inline">
                                                <input type="hidden" name="_token" value="{{ csrf_token('recreate' ~ missing.entityClass) }}">
                                                <button type="submit" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-plus-circle"></i> Créer la collection
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            {% endif %}

            <div class="row mb-4">
                <!-- Cluster Health -->
                <div class="col-md-3">
                    <div class="card bg-{{ clusterHealth.status }} text-white">
                        <div class="card-body">
                            <h5 class="card-title">Cluster Health</h5>
                            <p class="card-text">{{ clusterHealth.message }}</p>
                            <small class="text-muted">{{ clusterHealth.documents }} documents</small>
                        </div>
                    </div>
                </div>
                
                <!-- Node Status -->
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Node Status</h5>
                            <div class="d-flex justify-content-between">
                                <span>Total Nodes</span>
                                <span class="badge bg-primary">{{ nodesDetails|length }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Healthy Nodes</span>
                                <span class="badge bg-success">{{ nodesDetails|filter(n => n.is_healthy)|length }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Leader Node</span>
                                <span class="badge bg-info">{{ nodesDetails|filter(n => n.state == 'Leader')|length }}</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Performance Metrics -->
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Performance</h5>
                            <div class="d-flex justify-content-between">
                                <span>Search QPS</span>
                                <span class="badge bg-primary">{{ stats.search_qps ?? 'N/A' }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Write QPS</span>
                                <span class="badge bg-primary">{{ stats.write_qps ?? 'N/A' }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Memory Usage</span>
                                <span class="badge bg-primary">{{ stats.memory_usage_mb ?? 'N/A' }} MB</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- System Metrics -->
                <div class="col-md-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">System</h5>
                            <div class="d-flex justify-content-between">
                                <span>Uptime</span>
                                <span class="badge bg-primary">{{ stats.uptime_seconds ?? 'N/A' }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Version</span>
                                <span class="badge bg-primary">{{ nodesDetails[0].version ?? 'N/A' }}</span>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <span>Load Avg</span>
                                <span class="badge bg-primary">{{ stats.load_avg ?? 'N/A' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            <div>
                <button class="btn btn-sm btn-outline-secondary" onclick="exportCollections()" title="Export collections to JSON">
                    <i class="bi bi-file-earmark-arrow-down"></i> Export JSON
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Name</th>
                            <th>Documents</th>
                            <th>Fields</th>
                            <th>Created At</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="collections-tbody">
                        {% for collection in collections %}
                            <tr>
                                <td>
                                    <h6 class="mb-0">{{ collection.name }}</h6>
                                    <small class="text-muted">ID: {{ collection.name }}</small>
                                </td>
                                <td>
                                    <span class="badge bg-primary" title="{{ collection.num_documents }} documents">
                                        {{ collection.num_documents|number_format(0, '.', ',') }}
                                    </span>
                                </td>
                                <td>
                                    {# Show only first 4 fields, then "+X more" #}
                                    {% set maxVisible = 4 %}
                                    {% for field in collection.fields[:maxVisible] %}
                                        <span class="badge bg-info-subtle text-info-emphasis me-1" title="Field Type: {{ field.type }}">
                                            {{ field.name }} ({{ field.type }})
                                        </span>
                                    {% endfor %}
                                    {% if collection.fields|length > maxVisible %}
                                        <span class="badge bg-secondary" title="Additional fields not shown">
                                            +{{ collection.fields|length - maxVisible }} more
                                        </span>
                                    {% endif %}
                                </td>
                                <td>
                                    <span class="text-muted small" data-timestamp="{{ collection.created_at }}">
                                </td>
                                <td>
                                    {# Example action buttons with tooltips #}
                                    <button class="btn btn-sm btn-outline-warning me-1" data-bs-toggle="modal" data-bs-target="#reindexModal{{ loop.index }}" title="Reindex Collection">
                                        <i class="bi bi-arrow-clockwise"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal{{ loop.index }}" title="Delete Collection">
                                        <i class="bi bi-trash"></i>
                                    </button>

                                    {# Reindex Modal #}
                                    <div class="modal fade" id="reindexModal{{ loop.index }}" tabindex="-1" aria-labelledby="reindexModalLabel{{ loop.index }}" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header bg-warning text-dark">
                                                    <h5 class="modal-title" id="reindexModalLabel{{ loop.index }}">Reindex Collection</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <p>Are you sure you want to reindex the collection for entity <strong>{{ collection.name }}</strong>?</p>
                                                    <p class="text-muted">This will re-import all documents from your database into Typesense.</p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <form action="{{ path('micka17_typesense_admin_reindex_collection', {entityClass: entityCollectionMap[collection.name] ?? collection.name}) }}" method="post" class="d-inline">
                                                        <input type="hidden" name="_token" value="{{ csrf_token('reindex' ~ collection.name) }}">
                                                        <button type="submit" class="btn btn-warning"><i class="bi bi-arrow-clockwise"></i> Reindex Now</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    {# Delete Modal #}
                                    <div class="modal fade" id="deleteModal{{ loop.index }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ loop.index }}" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header bg-danger text-white">
                                                    <h5 class="modal-title" id="deleteModalLabel{{ loop.index }}">Confirm Deletion</h5>
                                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <p>Are you sure you want to delete the collection <strong>{{ collection.name }}</strong>?</p>
                                                    <p class="text-danger">This action cannot be undone.</p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <form action="{{ path('micka17_typesense_admin_delete_collection', {collectionName: collection.name}) }}" method="post" class="d-inline">
                                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ collection.name) }}">
                                                        <button type="submit" class="btn btn-danger"><i class="bi bi-trash"></i> Delete Permanently</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="5" class="text-center py-5">
                                    <div class="alert alert-info mb-0" role="alert">
                                        No collections found in Typesense.<br>
                                        <a href="{{ path('micka17_typesense_admin_entities') }}" class="btn btn-sm btn-outline-primary mt-2">
                                            Configure Indexable Entities
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        const tbody = document.getElementById('collections-tbody');
        const tableRows = tbody.querySelectorAll('tr');

        document.getElementById('collectionSearch').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            tableRows.forEach(row => {
                const name = row.querySelector('td:first-child h6')?.textContent.toLowerCase();
                if (name) {
                    row.style.display = name.includes(searchTerm) ? '' : 'none';
                }
            });
        });

        document.getElementById('sortCollections').addEventListener('change', function() {
            const sortField = this.value;
            const rowsArray = Array.from(tableRows);
            
            rowsArray.sort((a, b) => {
                let aValue, bValue;

                switch (sortField) {
                    case 'documents':
                        aValue = parseInt(a.querySelector('td:nth-child(2) .badge')?.textContent.replace(/,/g, '') || '0');
                        bValue = parseInt(b.querySelector('td:nth-child(2) .badge')?.textContent.replace(/,/g, '') || '0');
                        return bValue - aValue;
                    case 'created_at':
                        aValue = new Date(a.querySelector('td:nth-child(4) .text-muted')?.dataset.timestamp * 1000 || 0);
                        bValue = new Date(b.querySelector('td:nth-child(4) .text-muted')?.dataset.timestamp * 1000 || 0);
                        return bValue - aValue;
                    default:
                        aValue = a.querySelector('td:first-child h6')?.textContent.toLowerCase() || '';
                        bValue = b.querySelector('td:first-child h6')?.textContent.toLowerCase() || '';
                        return aValue.localeCompare(bValue);
                }
            });
            
            rowsArray.forEach(row => tbody.appendChild(row));

            document.getElementById('currentSort').textContent = this.options[this.selectedIndex].text;
        });

        document.getElementById('sortCollections').dispatchEvent(new Event('change'));
    });

    function exportCollections() {
        const rows = document.querySelectorAll('#collections-tbody tr');
        const data = [];

        rows.forEach(row => {
            if(row.style.display === 'none') return;
            const name = row.querySelector('td:first-child h6')?.textContent.trim();
            const documents = row.querySelector('td:nth-child(2) .badge')?.textContent.trim();
            const fields = Array.from(row.querySelectorAll('td:nth-child(3) .badge')).map(el => el.textContent.trim()).join(', ');
            const createdAt = row.querySelector('td:nth-child(4) .text-muted')?.textContent.trim();

            if(name) {
                data.push({ name, documents, fields, createdAt });
            }
        });

        const blob = new Blob([JSON.stringify(data, null, 2)], {type: 'application/json'});
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = 'collections.json';
        link.click();
    }
    </script>
{% endblock %}
